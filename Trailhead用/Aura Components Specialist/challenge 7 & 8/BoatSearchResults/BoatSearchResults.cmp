<aura:component controller="BoatSearchResults">
    
    <!--* 属性の設定  -->
    <aura:attribute name="boats" type="List"/>
    <aura:attribute name="boatTypeId" type="String"/>
    <!--TODO Challenge 5  -->
    <!--* 選択されたBoatIdを保持するアトリビュートを定義  -->
    <aura:attribute name="selectedBoatId" type="String"/>
    <!--* イベントの設定  -->
    <aura:handler name="init" value="{!this}" action="{!c.initSearch}"/>
    <!--TODO Challenge 5  -->
    <!--* BoatSelectイベント受信用のハンドラーを定義し、onBoatSelectを呼び出す  -->
    <aura:handler name="boatselect" event="c:BoatSelect" action="{!c.onBoatSelect}"/>
    
    <!--* searchメソッドを定義(aura:method) -->
    <!-- TODO challenge 4 -->
    <!--* アクションにはコントローラーのdoSearchを呼び出す -->
    <aura:method name="search" action="{!c.doSearch}"> 
        <aura:attribute name="boatTypeId" type="String"/> 
    </aura:method>
    
    <!--* 検索結果にBoatTileコンポーネントをリスト数分ループして配置 -->
    <lightning:layout multipleRows="true">
        <!--* iterationでループ処理-->
        <aura:iteration items='{!v.boats}' var='boat'>
            <lightning:layoutItem size="12" mediumDeviceSize="3" padding="around-small">
                <!--TODO Challenge 5  -->
                <!--* 選択中か否か（前述のBoatIdと一致しているかの判定を入れる） -->
                <c:BoatTile boat="{!boat}" selected="{! (boat.Id == v.selectedBoatId) ? true : false }"/>
            </lightning:layoutItem>
        </aura:iteration>
    </lightning:layout>
    
    <!--* リストが0の時の処理  -->
    <aura:if isTrue="{!v.boats.length==0}">
        <lightning:layoutItem class="slds-align_absolute-center" flexibility="auto" padding="around-small">
            No boats found
        </lightning:layoutItem>
    </aura:if>
    
</aura:component>